#include<stdio.h>
#include<unistd.h>
int main()
{
int pipefds1[2], pipefds2[2];
int returnstatus1, returnstatus2;
int pid;
char pipe1wmsg[20] ="Hi";
char pipe2wmsg[20] = "Hello";
char rmsg[20];
returnstatus1 = pipe(pipefds1);
if (returnstatus1 == -1)
{
printf("Unable to create pipe1\n");
return 1;
}
returnstatus2 = pipe(pipefds2);
if (returnstatus2 == -1)
{
printf("Unable to create pipe2\n");
return 1;
}
pid = fork();
if (pid != 0)
  {
close(pipefds1[0]);
close(pipefds2[1]);
printf("In Parent---Writing to pipe 1---Message is %s\n",pipe1wmsg);
write(pipefds1[1], pipe1wmsg,sizeof(pipe1wmsg));
read(pipefds2[0], rmsg, sizeof(rmsg));
printf("In Parent---Reading from pipe 2---Message is %s\n",rmsg);
}
else
{
close(pipefds1[1]);
close(pipefds2[0]);
read(pipefds1[0], rmsg, sizeof(rmsg));
printf("In Child---Reading from pipe 1---Message is %s\n",rmsg);
printf("In Child---Writing to pipe 2---Message is %s\n",pipe2wmsg);
write(pipefds2[1], pipe2wmsg,sizeof(pipe2wmsg));
}
return 0;
}
